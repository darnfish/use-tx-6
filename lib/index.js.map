{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.tsx"],"names":[],"mappings":"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","sourcesContent":["import { useCallback, useEffect, useRef, useState } from 'react'\n\nimport { create } from 'zustand'\nimport EventEmitter from 'eventemitter3'\n\nimport TX6, { TX6EventParameters, TX6EventType } from './events'\n\ntype TX6Emitter = EventEmitter<TX6EventType, TX6EventParameters>\ntype TX6ConnectionStatus = 'disconnected' | 'connecting' | 'connected'\n\ninterface TX6State {\n  tx6: TX6Emitter | null\n  setTX6: (tx6: TX6Emitter) => void\n}\n\nconst useStore = create<TX6State>((set) => ({\n\ttx6: null,\n\tsetTX6: tx6 => set({ tx6 })\n}))\n\nconst SERVICE_UUID = '03B80E5A-EDE8-4B33-A751-6CE34EC4C700'.toLowerCase()\nconst CHARACTERISTIC_UUID = '7772E5DB-3868-4112-A1A9-F2669D106BF3'.toLowerCase()\n\nexport default function useTX6() {\n\tconst [tx6] = useState(new EventEmitter<TX6EventType, TX6EventParameters>())\n\tconst [error, setError] = useState<Error>()\n\tconst [status, setStatus] = useState<TX6ConnectionStatus>('disconnected')\n\n\tconst setTX6 = useStore(state => state.setTX6)\n\n\tconst deviceRef = useRef<BluetoothDevice>()\n\tconst serverRef = useRef<BluetoothRemoteGATTServer>()\n\tconst serviceRef = useRef<BluetoothRemoteGATTService>()\n\tconst characteristicRef = useRef<BluetoothRemoteGATTCharacteristic>()\n\n\tconst connect = useCallback(async () => {\n\t\tsetError(undefined)\n\t\tsetStatus('connecting')\n\n\t\ttry {\n\t\t\tif(!navigator.bluetooth)\n\t\t\t\tthrow new Error('Browser does not support WebBluetooth')\n\n\t\t\t// Request MIDI device\n\t\t\tdeviceRef.current = await navigator.bluetooth.requestDevice({ filters: [{ services: [SERVICE_UUID] }] })\n\t\t\tif(!deviceRef.current.gatt)\n\t\t\t\tthrow new Error('No GATT server found')\n\n\t\t\t// Add disconnected callback\n\t\t\tdeviceRef.current.addEventListener('gattserverdisconnected', onGATTServerDisconnected)\n\n\t\t\t// Connect to GATT server\n\t\t\tserverRef.current = await deviceRef.current.gatt.connect()\n\n\t\t\t// Get service\n\t\t\tconst [service] = await serverRef.current.getPrimaryServices()\n\t\t\tserviceRef.current = service\n\n\t\t\t// Get characteristic\n\t\t\tconst [characteristic] = await serviceRef.current.getCharacteristics(CHARACTERISTIC_UUID)\n\t\t\tcharacteristicRef.current = characteristic\n\n\t\t\t// Add value listener\n\t\t\tcharacteristicRef.current.addEventListener('characteristicvaluechanged', onCharacteristicValueChanged)\n\n\t\t\t// Start value listener\n\t\t\tawait characteristicRef.current.startNotifications()\n\n\t\t\t// Update status\n\t\t\tsetStatus('connected')\n\t\t} catch(error) {\n\t\t\tsetError(error)\n\t\t\tsetStatus('disconnected')\n\t\t}\n\t}, [])\n\n\tconst onCharacteristicValueChanged = useCallback(event => {\n\t\t// Get midi event type\n\t\tconst dv = event.target.value as DataView\n\t\tconst midiEvent = dv.getUint16(3)\n\n\t\t// Decode and dispatch thru TX6 emitter\n\t\tconst { event: eventName, ...parameters } = TX6[midiEvent]\n\n\t\ttx6.emit(eventName, parameters)\n\t}, [])\n\n\tconst onGATTServerDisconnected = useCallback(() => {\n\t\t// Remove event listener\n\t\tdeviceRef.current?.removeEventListener('gattserverdisconnected', onGATTServerDisconnected)\n\n\t\t// Reset state\n\t\tsetError(undefined)\n\t\tsetStatus('disconnected')\n\n\t\tdeviceRef.current = undefined\n\t\tserverRef.current = undefined\n\t\tserviceRef.current = undefined\n\t\tcharacteristicRef.current = undefined\n\t}, [])\n\n\tuseEffect(() => {\n\t\tsetTX6(tx6)\n\t}, [tx6])\n\n\treturn {\n\t\terror,\n\t\tstatus,\n\t\tconnect\n\t}\n}\n\nexport function useTX6Attribute(event: TX6EventType) {\n\tconst tx6 = useStore(state => state.tx6)\n\tconst [params, setParams] = useState<TX6EventParameters>({})\n\n\tconst onCallback = useCallback(setParams, [tx6, event])\n\n\tuseEffect(() => {\n\t\tif(!tx6)\n\t\t\treturn\n\n\t\ttx6.addListener(event, onCallback)\n\n\t\treturn () => {\n\t\t\ttx6.removeListener(event, onCallback)\n\t\t}\n\t}, [tx6, event])\n\n\treturn params\n}\n\nexport function useTX6Attributes(events: TX6EventType[]) {\n\treturn events.map(event => useTX6Attribute(event))\n}\n"]}